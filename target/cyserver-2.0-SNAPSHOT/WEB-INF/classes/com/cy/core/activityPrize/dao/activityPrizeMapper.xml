<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cy.core.activityPrize.dao.ActivityPrizeMapper">
    <resultMap type="com.cy.core.activityPrize.entity.ActivityPrize" id="activityPrizeResultMap">
        <id column="id" property="id"/>
        <result column="activity_id" property="activityId"/>
        <result column="name" property="name"/>
        <result column="num" property="num"/>
        <result column="prize_name" property="prizeName"/>
        <result column="prize_src" property="prizeSrc"/>
        <result column="is_repeat" property="isRepeat"/>
        <result column="surplus_num" property="surplusNum"/>
        <result column="sort" property="sort"/>
        <result column="del_flag" property="delFlag"/>
        <result column="update_date" property="updateDate"/>
        <result column="update_by" property="updateBy"/>
        <result column="create_date" property="createDate"/>
        <result column="create_by" property="createBy"/>
        <result column="remarks" property="remarks"/>
    </resultMap>
    <insert id="insert" parameterType="com.cy.core.activityPrize.entity.ActivityPrize">
        INSERT INTO act_activity_Prize (
        id,
        activity_id,
        name,
        num,
        prize_name,
        prize_src,
        is_repeat,
        surplus_num,
        sort,
        del_flag,
        update_date,
        update_by,
        create_date,
        create_by,
        remarks
        )
        VALUES (
        #{id},
        #{activityId},
        #{name },
        #{num },
        #{prizeName},
        #{prizeSrc },
        #{isRepeat},
        #{surplusNum},
        #{sort  },
        #{delFlag},
        #{updateDate},
        #{updateBy},
        #{createDate},
        #{createBy},
        #{remarks}
        )
    </insert>
    <update id="update" parameterType="com.cy.core.activityPrize.entity.ActivityPrize">
        UPDATE act_activity_Prize SET
        activity_id=#{activityId},
        name=#{name},
        num= #{num},
        prize_name=#{prizeName},
        prize_src=#{prizeSrc},
        is_repeat=#{isRepeat},
        surplus_num=#{surplusNum},
        sort=#{sort},
        del_flag = #{delFlag},
        update_date = #{updateDate},
        update_by = #{updateBy},
        remarks = #{remarks}
		WHERE id = #{id}
    </update>
    <select id="selectById" parameterType="string" resultMap="activityPrizeResultMap">
      SELECT
        *
      FROM act_activity_Prize
      WHERE id = #{id} AND del_flag != '1'
    </select>


    <select id="count" parameterType="map" resultType="long">
        select count(id)
        FROM act_activity_Prize
        WHERE del_flag = '0'
        <if test="activityId != null and activityId != ''">
            AND activity_id = #{activityId}
        </if>

    </select>

    <select id="selectAll" resultMap="activityPrizeResultMap">
        SELECT * FROM act_activity_Prize WHERE del_flag != '1'
    </select>
    <select id="selectList" parameterType="map" resultMap="activityPrizeResultMap">
        SELECT
        *
        FROM act_activity_Prize
        WHERE del_flag != '1'
        <if test="activityId != null and activityId != ''">
            AND activity_id = #{activityId}
        </if>
        ORDER BY sort
        <if test='isNotLimit !=null and isNotLimit !="1"'>
            limit #{start},#{rows}
        </if>

    </select>

    <update id="delete" parameterType="list">
        update act_activity_Prize SET del_flag='1' where id in
        <foreach collection="list" open="(" close=")" item="ids" separator=",">
            #{ids}
        </foreach>
    </update>
</mapper>