<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.cy.core.deptInfo.dao.DeptInfoMapper">
    <resultMap id="deptInfoResultMap" type="com.cy.core.deptInfo.entity.DeptInfo">
        <id column="dept_id" property="deptId"/>
        <result column="dept_name" property="deptName" />
        <result column="parent_id" property="parentId" />
        <result column="full_name" property="fullName" />
        <result column="level" property="level" />
        <result column="alias_name" property="aliasName" />
        <!--  
        <collection property="deptInfos" ofType="com.cy.core.deptInfo.entity.DeptInfo">
            <id column="dept_id" property="deptId" />
            <result column="dept_name" property="deptName" />
        </collection>
        -->
    </resultMap>

    <resultMap id="deptResultMap" type="com.cy.core.deptInfo.entity.DeptInfo">
        <id column="dept_id" property="deptId"/>
        <result column="dept_name" property="deptName" />
        <result column="full_name" property="fullName" />
    </resultMap>

    <!--add by jiangling 查询登录用户能查看的所有机构-->
    <select id="selectAll" parameterType="list" resultMap="deptInfoResultMap">
        select * from cy_dept_info
        <where>
            <if test="list!=null and list.size()>0">
                <foreach collection="list" open="(" separator="or" close=")" item="deptInfo">
                    dept_id like concat(#{deptInfo.deptId},'%') or #{deptInfo.deptId} like concat(dept_id,'%')
                </foreach>
            </if>
        </where>
    </select>

    <!-- lixun -->
    <select id="selectDeptAttrTree" parameterType="long" resultMap="deptInfoResultMap">
        select case academyid is null or academyid!='' when true then (select @xd:=academyid from dual where @se:=sequence) else case sequence like concat(@se,'.%') when true then @xd else '' end end academyid,alumniId,alumniName,main,pid,sequence,`level`,region,industry,hobby,isused,introduction,`status`,delstate,createById,accountNum,createTime,checkFlag,memberCount,presidentName,telephone,address,email from (
        select * from (
        select @se:='-1' ,@xd:='-1',a.* from cy_alumni a where (main>=0 and
        sequence like concat((select sequence from cy_alumni where alumniId=#{id}),'.%' ))
        and delstate!='1'
        union
        select * from (
        select @r as tmp_aluId,
        (select @r:= pid from cy_alumni where alumniId = tmp_aluId ) as tmp_pid
        from (select @r := #{id},@l := 0 ) vars, cy_alumni h where @r != 0) T1
        join cy_alumni T2 on t1.tmp_aluId = t2.alumniId where delstate!='1' ) cc
        order by cc.sequence asc ) t3;
    </select>
    <!-- lixun 2016.7.25 按userid查询可看权限范围内的机构树 -->
    <sql id="getDeptByUser">
        select deptId from cy_user_dept where userId=#{userId}
    </sql>
    <select id="selectAlterTreeByUser" parameterType="long" resultMap="deptInfoResultMap">

        select t2.* from (select distinct case @id when '0' then @id:=dept else @id end dept_id,
        (select @id:=parent_id from cy_dept_info where @id=dept_id) parent_id from (select @id:='0',
        '',dept_id dept from cy_dept_info,(select '' union all select '' union all select '' union all
        select '' union all select '') kong where belong_dept_id in (<include refid="getDeptByUser" />)
        or dept_id in (<include refid="getDeptByUser" />)) digui union select b.dept_id dept_id,b.parent_id
        parent_id from (select dept_id,parent_id from cy_dept_info where belong_dept_id in
        (<include refid="getDeptByUser" />) or dept_id in (<include refid="getDeptByUser" />)) a
        left join cy_dept_info b on b.dept_id like concat(a.dept_id,'%') order by dept_id) t1 left join
        cy_dept_info t2 on t1.dept_id=t2.dept_id


    </select>
    <!-- lixun -->

    <select id="getAcademyId" parameterType="long" resultType="String">
        SELECT academyid FROM `cy_alumni` WHERE alumniId=#{deptId}
    </select>

    <select id="getAcademyTree" parameterType="String" resultMap="deptInfoResultMap">
        SELECT
            t2.*
        FROM
            (
                SELECT DISTINCT
                    CASE @id
                WHEN '0' THEN
                    @id := dept
                ELSE
                    @id
                END dept_id,
                (
                    SELECT
                        @id := parent_id
                    FROM
                        cy_dept_info
                    WHERE
                        @id = dept_id
                ) parent_id
            FROM
                (
                    SELECT
                        @id := '0',
                        '',
                        dept_id dept
                    FROM
                        cy_dept_info,
                        (
                            SELECT
                                ''
                            UNION ALL
                                SELECT
                                    ''
                                UNION ALL
                                    SELECT
                                        ''
                                    UNION ALL
                                        SELECT
                                            ''
                                        UNION ALL
                                            SELECT
                                                ''
                        ) kong
                    WHERE
                        belong_dept_id = #{academyId}

                    OR dept_id = #{academyId}
                ) digui
            UNION
                SELECT
                    b.dept_id dept_id,
                    b.parent_id parent_id
                FROM
                    (
                        SELECT
                            dept_id,
                            parent_id
                        FROM
                            cy_dept_info
                        WHERE
                            belong_dept_id = #{academyId}
                        OR dept_id = #{academyId}
                    ) a
                LEFT JOIN cy_dept_info b ON b.dept_id LIKE concat(a.dept_id, '%')
                ORDER BY
                    dept_id
            ) t1
        LEFT JOIN cy_dept_info t2 ON t1.dept_id = t2.dept_id
    </select>

    <select id="selectSchools" resultMap="deptResultMap">
        SELECT dept_id,dept_name,`level` FROM cy_dept_info WHERE LENGTH(dept_id)=6 AND status = '20'
          ORDER  BY sort,dept_name
    </select>

    <select id="selectElseList" parameterType="String" resultMap="deptResultMap">
      SELECT dept_id,dept_name,`level` FROM cy_dept_info WHERE parent_id=#{paretnId} AND status = '20'
      ORDER  BY sort,dept_name
    </select>

    <select id="findById" parameterType="String" resultMap="deptResultMap">
        SELECT * FROM cy_dept_info WHERE dept_id = #{deptId}
    </select>

</mapper>