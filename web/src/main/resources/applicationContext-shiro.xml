<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd"
	default-lazy-init="false">

	<description>Shiro Security Config</description>

	<!-- Shiro Filter -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/login" />
		<property name="successUrl" value="/index" />
		<property name="filters">
			<map>
				<entry key="authc" value-ref="authcFilter"/>
				<entry key="captchaValidate" value-ref="captchaValidateFilter"/>
			</map>
		</property>
		<property name="filterChainDefinitions">
			<value>
				/favicon.ico = anon,noSessionCreation
				/statics/** = anon
				/include/** = anon
				/resource/** = anon
				/captchaServlet = anon
				/loginajax = anon
				/doLoginajax = captchaValidate,anon
				/login = captchaValidate,authc

				/** = user,authc
			</value>
		</property>
	</bean>
	<bean id="authcFilter" class="com.hdos.platform.base.captcha.CustomFormAuthenticationFilter"></bean>
	<bean id="captchaValidateFilter" class="com.hdos.platform.base.captcha.CaptchaValidateFilter">
		<property name="captchaParam" value="captcha" />
	</bean>


	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="myRealm" />
		<property name="sessionManager" ref="sessionManager" />
	</bean>

	<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<property name="globalSessionTimeout" value="3600000" />
		<property name="sessionDAO" ref="redisSessionDAO" />
	</bean>

	<!-- <bean id="myRealm" class="org.apache.shiro.realm.text.IniRealm">
		<constructor-arg value="classpath:shiro.ini"></constructor-arg>
	</bean> -->

	<bean id="myRealm" class="com.hdos.platform.core.shiro.UserRealm">
		<property name="credentialsMatcher">
			<bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
				<property name="hashAlgorithmName" value="MD5"/>
			</bean>
		</property>
		<property name="authorizationCacheName" value="shiro-authorizationCache"/>
		<property name="cacheManager" ref="redisCacheManager" />
	</bean>

	<!-- default use ConcurrentHashMap
	<bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO"/>
	-->

	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

		<!-- Use Redis for cache -->
	<bean id="redisManager" class="com.hdos.platform.core.shiro.cache.RedisManager" >
		<property name="host" value="${jedis.host}" />
		<property name="port" value="${jedis.port}" />
	</bean>
	<bean id="redisCacheManager" class="com.hdos.platform.core.shiro.cache.RedisCacheManager" >
		<property name="redisManager" ref="redisManager" />
	</bean>
	<bean id="redisSessionDAO" class="com.hdos.platform.core.shiro.RedisSessionDAO" >
		<property name="redisManager" ref="redisManager" />
	</bean>

</beans>